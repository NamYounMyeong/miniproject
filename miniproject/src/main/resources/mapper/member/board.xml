<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<!-- 게시글 단일 조회 -->
	<select id="detail" parameterType="int" resultMap="boardDetail">
	  SELECT 	
		      pstg_no, 
		      pstg_wrt_id, 
		      pstg_wrt_title, 
		      pstg_wrt_cn, 
		      pstg_wrt_ymd, 
		      pstg_inq_cnt 
		FROM  pstg
	   WHERE  pstg_no = #{pstgNo}
	</select>
	
	<!-- 댓글 목록 조회 -->
	<select id="selectReplyList" resultType="ReplyDto" parameterType="int">
	  SELECT
              cmnt_no,
              cmnt_wrt_nm,
              cmnt_wrt_ymd,
              cmnt_mdfcn_ymd,
              cmnt_wrt_cn,
              cmnt_pstg_no,
              cmnt_parent,
              cmnt_group,
              cmnt_depth
        FROM  cmnt 
       WHERE cmnt_pstg_no = #{cmntPstgNo}
     CONNECT BY PRIOR cmnt_no = cmnt_parent 
       START WITH cmnt_parent IS null 
       ORDER SIBLINGS BY cmnt_group asc, cmnt_no asc
	</select>
	
	<!-- 첨부파일 목록 조회 -->
	<select id="selectAtchList" resultType="AttachmentDto" parameterType="int">
	   SELECT 
	           A.atch_no, 
	           A.atch_extn_nm, 
	           A.atch_file_nm, 
	           A.atch_file_sz, 
	           A.atch_strg_ymd 
	     FROM  atch A LEFT OUTER JOIN pstg_img B 
	       ON  A.atch_no = B.pstg_img_atch_no 
	    WHERE  B.pstg_img_pstg_no = #{pstgNo}
	</select>
	
	<!-- 댓글 리스트 계층형 조회 -->
	<resultMap type="BoardDetailVO" id="boardDetail">
		<association property="boardDto">
			<result column="pstg_no" property="pstgNo"/>
			<result column="pstg_wrt_id" property="pstgWrtId"/>
			<result column="pstg_wrt_title" property="pstgWrtTitle"/>
			<result column="pstg_wrt_cn" property="pstgWrtCn"/>
			<result column="pstg_wrt_ymd" property="pstgWrtYmd"/>
			<result column="pstg_mdfcn_ymd" property="pstgMdfcnYmd"/>
			<result column="pstg_inq_cnt" property="pstgInqCnt"/>
			<result column="pstg_group" property="pstgGroup"/>
			<result column="pstg_parent" property="pstgParent"/>
			<result column="pstg_depth" property="pstgDepth"/>
		</association>
		
		<collection property="replyList" javaType="java.util.List" ofType="ReplyDto" select="selectReplyList" column="pstg_no">
			<result column="cmnt_no" property="cmntNo"/>
			<result column="cmnt_wrt_nm" property="cmntWrtNm"/>
			<result column="cmnt_wrt_ymd" property="cmntWrtYmd"/>
			<result column="cmnt_mdfcn_ymd" property="cmntMdfcnYmd"/>
			<result column="cmnt_wrt_cn" property="cmntWrtCn"/>
			<result column="cmnt_pstg_no" property="cmntPstgNo"/>
			<result column="cmnt_parent" property="cmntParent"/>
			<result column="cmnt_group" property="cmntGroup"/>
			<result column="cmnt_depth" property="cmntDepth"/>
		</collection>
		
		<collection property="atchList" javaType="java.util.List" ofType="AttachmentDto" select="selectAtchList" column="pstg_no">
			<result column="atch_no" property="atchNo"/>
			<result column="atch_extn_nm" property="atchExtnNm"/>
			<result column="atch_file_nm" property="atchFileNm"/>
			<result column="atch_file_sz" property="atchFileSz"/>
			<result column="atch_strg_ymd" property="atchStrgYmd"/>
		</collection>
	</resultMap>
	
	<select id="replyNo" resultType="int">
	  SELECT
	         cmnt_seq.nextval replyseq
	    FROM dual
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="replyWrite" parameterType="ReplyDto">
	  INSERT into cmnt
	(
	  cmnt_no,  <!-- 댓글 번호 -->
	  cmnt_wrt_nm,  <!-- 작성자 -->
	  cmnt_wrt_ymd,  <!-- 작성일 -->
	  cmnt_wrt_cn,  <!-- 내용 -->
	  cmnt_pstg_no,  <!-- 게시물 번호 -->
	  <if test="cmntParent != ''">
	  cmnt_parent,  <!-- 부모글 번호 -->
	  </if>
	  cmnt_group,  <!-- 그룹 번호 -->
	  cmnt_depth  <!-- 차수 (띄어쓰기)-->
	) 
	  VALUES
	(
	  #{cmntNo}, 
	  #{cmntWrtNm}, 
	  sysdate, 
	  #{cmntWrtCn}, 
	  #{cmntPstgNo},
	  <if test="cmntParent != ''">
	  #{cmntParent},
	  </if>
	  #{cmntGroup},
	  #{cmntDepth}
	)
	</insert>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="int">
	  DELETE  cmnt
	   WHERE  cmnt_no = #{cmntNo}
	</delete>
	
	<!-- 댓글 수정 -->
	<update id="updateReply" parameterType="ReplyDto">
	  UPDATE  cmnt
	     SET  cmnt_wrt_cn = #{cmntWrtCn},
	          cmnt_mdfcn_ymd = sysdate
	   WHERE  cmnt_no = #{cmntNo}
	</update>
	
	<!-- 게시글 리스트 조회 -->
	<select id="selectAll" resultType="BoardDto">
	    SELECT *
	    FROM pstg
	    START WITH pstg_parent is NULL  <!-- START WITH [시작조건] -->
	    CONNECT BY PRIOR pstg_no = pstg_parent  <!-- CONNECT BY [부모]=[자식] 계층 구조 연결 -->
	    ORDER SIBLINGS BY pstg_group DESC, pstg_no ASC  <!-- ORDER SIBLINGS:(계층형 쿼리 정렬) 자식글 정렬 -->
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="viewCount" parameterType="int">
   	  UPDATE pstg SET pstg_inq_cnt = pstg_inq_cnt + 1 WHERE pstg_no = #{pstgNo}
	</update>

	<!-- 수정 -->
	<update id="updateToBoard" parameterType="BoardDto">
	  UPDATE pstg
	  SET pstg_wrt_title = #{pstgWrtTitle}, pstg_wrt_cn = #{pstgWrtCn}
	  WHERE pstg_no = #{pstgNo} 
	</update>

	<!-- 삭제  -->
	<delete id="boardToDelete">
	  DELETE FROM pstg WHERE pstg_no = #{pstgNo}
	</delete>
	
	<!-- 답글 달기 -->
	<insert id="insertReplyWrite" parameterType="BoardDto">
	    INSERT INTO pstg (
	        pstg_no,
	        pstg_wrt_id,
	        pstg_wrt_title,
	        pstg_wrt_cn,
	        pstg_wrt_ymd,
	        pstg_group,
	        pstg_depth,
	        pstg_parent
	    )
	    SELECT
	        pstg_seq.nextval,
	        #{pstgWrtId},
	        #{pstgWrtTitle},
	        #{pstgWrtCn},
	        sysdate,
	        pstg_group + 1,
	        pstg_depth + 1,
	        #{pstgNo}
	    FROM pstg
	    WHERE pstg_no = #{pstgNo}
	</insert>
	
	<!-- 답변등록 조회 -->
	<select id="selectReplyListToBoard" parameterType="int" resultType="BoardDto">
	  SELECT *
	  FROM pstg
	  START WITH pstg_no = #{pstgParent} <!-- 시작조건 -->
	  CONNECT BY PRIOR pstg_group = pstg_parent <!-- 계층 구조 연결 -->
	  ORDER SIBLINGS BY pstg_group DESC, pstg_parent ASC <!-- 자식글 정렬 -->
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="writeBoard" parameterType="BoardDto">
    <selectKey keyProperty="pstgNo" resultType="int" order="BEFORE">
        SELECT pstg_seq.nextval FROM dual
    </selectKey>
    INSERT into pstg (
        pstg_no,
        pstg_wrt_id,
        pstg_wrt_title,
        pstg_wrt_cn,
        pstg_group,
        pstg_depth,
        pstg_wrt_ymd
    ) VALUES (
        pstg_seq.nextval,
        #{pstgWrtId},
        #{pstgWrtTitle},
        #{pstgWrtCn},
        #{pstgGroup},
		#{pstgDepth},        
        sysdate
    )
	</insert>
	
</mapper>